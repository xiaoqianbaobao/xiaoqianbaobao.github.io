<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Qian&#39;s Blog</title>
    <link>https://csqread.top/</link>
    <description>Recent content on Qian&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 12 Mar 2023 20:59:03 +0800</lastBuildDate><atom:link href="https://csqread.top/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo博客搭建</title>
      <link>https://csqread.top/posts/blog/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sun, 05 Mar 2023 12:47:51 +0800</pubDate>
      
      <guid>https://csqread.top/posts/blog/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
      <description>Hugo博客搭建过程及遇到的问题</description>
    </item>
    
    <item>
      <title>拼多多面经</title>
      <link>https://csqread.top/posts/tech/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Sun, 12 Mar 2023 20:59:03 +0800</pubDate>
      
      <guid>https://csqread.top/posts/tech/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E9%9D%A2%E7%BB%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java ArrayList源码分析与总结</title>
      <link>https://csqread.top/posts/tech/java-arraylist%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8E%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 09 Mar 2023 21:09:22 +0800</pubDate>
      
      <guid>https://csqread.top/posts/tech/java-arraylist%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8E%E6%80%BB%E7%BB%93/</guid>
      <description>ArrayList 1. 概览 实现了 RandomAccess 接口，因此支持随机访问。这是理所当然的，因为 ArrayList 是基于数组实现的。 1 2 public class ArrayList&amp;lt;E&amp;gt; extends AbstractList&amp;lt;E&amp;gt; implements List&amp;lt;E&amp;gt;, RandomAccess, Cloneable, java.io.Serializable 数组的默认大小为 10。 1 private static final int DEFAULT_CAPACITY =</description>
    </item>
    
    <item>
      <title>分布式性能优化总结</title>
      <link>https://csqread.top/posts/tech/%E5%88%86%E5%B8%83%E5%BC%8F%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 09 Mar 2023 20:18:13 +0800</pubDate>
      
      <guid>https://csqread.top/posts/tech/%E5%88%86%E5%B8%83%E5%BC%8F%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/</guid>
      <description>缓存优化 1、对应参数表数据量如果小于10M，数据要同时缓存到Redis和本地，查询遵循的缓存原则为:优先查询本地缓存，本地没有查询Redis</description>
    </item>
    
    <item>
      <title>Java中的字符操作</title>
      <link>https://csqread.top/posts/tech/java%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 07 Mar 2023 20:33:00 +0800</pubDate>
      
      <guid>https://csqread.top/posts/tech/java%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E6%93%8D%E4%BD%9C/</guid>
      <description>字符操作 编码与解码 编码就是把字符转换为字节，而解码是把字节重新组合成字符。 如果编码和解码过程使用不同的编码方式那么就出现了乱码。 GBK 编码中，中</description>
    </item>
    
    <item>
      <title>Java锁优化相关笔记</title>
      <link>https://csqread.top/posts/tech/java%E9%94%81%E4%BC%98%E5%8C%96%E7%9B%B8%E5%85%B3%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 06 Mar 2023 20:50:47 +0800</pubDate>
      
      <guid>https://csqread.top/posts/tech/java%E9%94%81%E4%BC%98%E5%8C%96%E7%9B%B8%E5%85%B3%E7%AC%94%E8%AE%B0/</guid>
      <description>JVM对synchronized的优化笔记</description>
    </item>
    
  </channel>
</rss>
